1.修改mysql配置

找到主数据库的配置文件my.cnf(或者my.ini)，我的在/etc/mysql/my.cnf,在[mysqld]部分插入如下两行：

[mysqld]
log-bin=mysql-bin #开启二进制日志
server-id=1 #设置server-id
2.重启mysql，创建用于同步的用户账号

打开mysql会话shell>mysql -hlocalhost -uname -ppassword

创建用户并授权：用户：rel1密码：slavepass

mysql> CREATE USER 'repl'@'123.57.44.85' IDENTIFIED BY 'slavepass';#创建用户
mysql> GRANT REPLICATION SLAVE ON *.* TO 'repl'@'123.57.44.85';#分配权限
mysql>flush privileges;   #刷新权限
3.查看master状态，记录二进制文件名(mysql-bin.000003)和位置(73)：

mysql > SHOW MASTER STATUS;
+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql-bin.000003 | 73       | test         | manual,mysql     |
+------------------+----------+--------------+------------------+
二、从服务器slave修改：

1.修改mysql配置

同样找到my.cnf配置文件，添加server-id

[mysqld]
server-id=2 #设置server-id，必须唯一
2.重启mysql，打开mysql会话，执行同步SQL语句(需要主服务器主机名，登陆凭据，二进制文件的名称和位置)：

mysql> CHANGE MASTER TO
    ->     MASTER_HOST='182.92.172.80',
    ->     MASTER_USER='rep1',
    ->     MASTER_PASSWORD='slavepass',
    ->     MASTER_LOG_FILE='mysql-bin.000003',
    ->     MASTER_LOG_POS=73;
3.启动slave同步进程：

mysql>start slave;
4.查看slave状态：

复制代码
mysql> show slave status\G;
*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 182.92.172.80
                  Master_User: rep1
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: mysql-bin.000013
          Read_Master_Log_Pos: 11662
               Relay_Log_File: mysqld-relay-bin.000022
                Relay_Log_Pos: 11765
        Relay_Master_Log_File: mysql-bin.000013
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
              Replicate_Do_DB: 
          Replicate_Ignore_DB: 
        ...
复制代码
当Slave_IO_Running和Slave_SQL_Running都为YES的时候就表示主从同步设置成功了。接下来就可以进行一些验证了，比如在主master数据库的test数据库的一张表中插入一条数据，在slave的test库的相同数据表中查看是否有新增的数据即可验证主从复制功能是否有效，还可以关闭slave（mysql>stop slave;）,然后再修改master，看slave是否也相应修改（停止slave后，master的修改不会同步到slave），就可以完成主从复制功能的验证了。

还可以用到的其他相关参数：

master开启二进制日志后默认记录所有库所有表的操作，可以通过配置来指定只记录指定的数据库甚至指定的表的操作，具体在mysql配置文件的[mysqld]可添加修改如下选项：



cd root 

cat glj_rsa.pub >> .ssh/authorized_keys

git init --bare /home/git/data/code-alz.git 绝对地址建立仓库

chown -R git:git /home/git/data 绝对地址更改git 权限


linux 创建组 创建用户分配组
groupadd xinan
useradd -d /home/api -m -g xinan -s /bin/csh -r api
passwd api apiXA!Qzy
useradd -d /home/manager -m -g xinan -s /bin/csh manager
passwd manager managerXA!Qzy
开发防火墙端口
firewall-cmd --permanent --zone=public --add-port=9050/tcp
firewall-cmd --permanent --zone=public --add-port=8050/tcp
firewall-cmd --reload

mysql 登录

mysql -uroot -p 

create user qzkc

GRANT ALL PRIVILEGES ON qzkc_test.* TO 'qzkc'@'%'IDENTIFIED BY 'QzKC@011!' ;
flush privileges;
//查看端口占用
netstat -anp | grep 9050
c创建用户分配组
useradd -d /home/qzkc/qzkc_manager -m -g qzkc -s /bin/csh -r qzkc_manager
sh结尾所有复制到 某服务器 home下
scp *.sh qzkc_api@192.168.1.156:~